name: MLOps

on:
  # Runs on pushes targeting main branch
  push:
    branches:
      - main

  # Runs on pull requests
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow the creation and usage of self-hosted runners
permissions:
  contents: read
  id-token: write

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.CML_GCP_SERVICE_ACCOUNT_KEY }}'
      - name: Get Google Cloud's Kubernetes credentials
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'mlops-kubernetes'
          location: 'europe-west6-a'
      - uses: iterative/setup-cml@v1
        with:
          version: '0.19.0'
      - name: Initialize runner on Kubernetes
        env:
          REPO_TOKEN: ${{ secrets.CML_PAT }}
        run: |
          export KUBERNETES_CONFIGURATION=$(cat $KUBECONFIG)
          # https://cml.dev/doc/ref/runner
          # https://registry.terraform.io/providers/iterative/iterative/latest/docs/resources/task#machine-type
          # https://registry.terraform.io/providers/iterative/iterative/latest/docs/resources/task#{cpu}-{memory}
          cml runner \
            --labels="cml-runner" \
            --cloud="kubernetes" \
            --cloud-type="1-2000" \
            --cloud-kubernetes-node-selector="gpu=true" \
            --single

  train:
    permissions: write-all
    needs: setup-runner
    runs-on: [self-hosted, cml-runner]
    timeout-minutes: 50400 # 35 days
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: pip install --requirement requirements-freeze.txt
      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.DVC_GCP_SERVICE_ACCOUNT_KEY }}'
      - name: Train model
        run: dvc repro --pull --allow-missing
        # After the experiment is done we update the dvc.lock and push the
        # changes with dvc. This allows dvc to cache the experiment results
        # and use them locally and remotely on pipelines without running the
        # experiment again.
      - name: Commit changes in dvc.lock
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Commit changes in dvc.lock
          file_pattern: dvc.lock
      - name: Push experiment results to DVC remote storage
        run: dvc push

  report:
    permissions: write-all
    needs: train
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.2.2'
      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.DVC_GCP_SERVICE_ACCOUNT_KEY }}'
      - name: Setup CML
        uses: iterative/setup-cml@v1
        with:
          version: '0.19.1'
      - name: Create CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch all other Git branches
          git fetch --depth=1 origin main:main

          # Add title to the report
          echo "# Experiment Report (${{ github.sha }})" >> report.md

          # Compare parameters to main branch
          echo "## Params workflow vs. main" >> report.md
          dvc params diff main --md >> report.md

          # Compare metrics to main branch
          echo "## Metrics workflow vs. main" >> report.md
          dvc metrics diff main --md >> report.md

          # Compare plots (images) to main branch
          dvc plots diff main

          # Create plots
          echo "## Plots" >> report.md

          # Create training history plot
          echo "### Training History" >> report.md
          echo "#### main" >> report.md
          echo '![](./dvc_plots/static/main_evaluation_plots_training_history.png "Training History")' >> report.md
          echo "#### workspace" >> report.md
          echo '![](./dvc_plots/static/workspace_evaluation_plots_training_history.png "Training History")' >> report.md

          # Create predictions preview
          echo "### Predictions Preview" >> report.md
          echo "#### main" >> report.md
          echo '![](./dvc_plots/static/main_evaluation_plots_pred_preview.png "Predictions Preview")' >> report.md
          echo "#### workspace" >> report.md
          echo '![](./dvc_plots/static/workspace_evaluation_plots_pred_preview.png "Predictions Preview")' >> report.md

          # Create confusion matrix
          echo "### Confusion Matrix" >> report.md
          echo "#### main" >> report.md
          echo '![](./dvc_plots/static/main_evaluation_plots_confusion_matrix.png "Confusion Matrix")' >> report.md
          echo "#### workspace" >> report.md
          echo '![](./dvc_plots/static/workspace_evaluation_plots_confusion_matrix.png "Confusion Matrix")' >> report.md

          # Publish the CML report
          cml comment update --target=pr --publish report.md
  
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: train
    name: Call Deploy
    uses: ./.github/workflows/deploy.yml
